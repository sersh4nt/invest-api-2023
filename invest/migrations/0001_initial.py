# Generated by Django 4.1.7 on 2023-02-17 07:00

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("name", models.CharField(blank=True, max_length=1000)),
            ],
            options={
                "db_table": "accounts",
            },
        ),
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "iso",
                    models.CharField(max_length=3, primary_key=True, serialize=False),
                ),
                ("figi", models.CharField(max_length=100)),
                ("class_code", models.CharField(max_length=100)),
                ("lot", models.IntegerField()),
                ("name", models.CharField(max_length=1000)),
                ("exchange", models.CharField(max_length=100)),
                ("uid", models.CharField(max_length=100)),
                ("api_trade_available", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "currencies",
            },
        ),
        migrations.CreateModel(
            name="Instrument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("figi", models.CharField(max_length=100)),
                ("ticker", models.CharField(max_length=100)),
                ("class_code", models.CharField(max_length=100)),
                ("lot", models.IntegerField()),
                ("name", models.CharField(max_length=1000)),
                ("exchange", models.CharField(max_length=100)),
                ("uid", models.CharField(max_length=100)),
                (
                    "position_uid",
                    models.CharField(default=None, max_length=100, null=True),
                ),
                ("api_trade_available", models.BooleanField(default=False)),
                (
                    "min_price_increment",
                    models.DecimalField(decimal_places=9, max_digits=19),
                ),
                ("short_enabled_flag", models.BooleanField(default=False)),
                (
                    "currency",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="invest.currency",
                    ),
                ),
            ],
            options={
                "db_table": "instruments",
            },
        ),
        migrations.CreateModel(
            name="Bond",
            fields=[
                (
                    "instrument_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="invest.instrument",
                    ),
                ),
                ("coupon_quantity_per_year", models.IntegerField()),
                ("maturiry_date", models.DateTimeField()),
                ("nominal", models.DecimalField(decimal_places=9, max_digits=19)),
                (
                    "initial_nominal",
                    models.DecimalField(decimal_places=9, max_digits=19),
                ),
                ("issue_size", models.IntegerField()),
                ("floating_coupon_flag", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "bonds",
            },
            bases=("invest.instrument",),
        ),
        migrations.CreateModel(
            name="ETF",
            fields=[
                (
                    "instrument_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="invest.instrument",
                    ),
                ),
                (
                    "fixed_commission",
                    models.DecimalField(decimal_places=9, max_digits=19),
                ),
                ("focus_type", models.CharField(blank=True, max_length=100)),
                ("num_shares", models.DecimalField(decimal_places=9, max_digits=19)),
                ("rebalancing_freq", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "etfs",
            },
            bases=("invest.instrument",),
        ),
        migrations.CreateModel(
            name="Share",
            fields=[
                (
                    "instrument_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="invest.instrument",
                    ),
                ),
                ("ipo_date", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "shares",
            },
            bases=("invest.instrument",),
        ),
        migrations.CreateModel(
            name="Subaccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("broker_id", models.BigIntegerField()),
                ("type", models.CharField(max_length=100)),
                ("name", models.CharField(blank=True, max_length=1000)),
                ("description", models.TextField(blank=True)),
                ("is_enabled", models.BooleanField(default=False)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="invest.account"
                    ),
                ),
            ],
            options={
                "db_table": "subaccounts",
            },
        ),
        migrations.CreateModel(
            name="PortfolioRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ts", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "subaccount",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="invest.subaccount",
                    ),
                ),
            ],
            options={
                "db_table": "portfolio_records",
            },
        ),
        migrations.CreateModel(
            name="PortfolioPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("blocked", models.DecimalField(decimal_places=9, max_digits=19)),
                ("quantity", models.DecimalField(decimal_places=9, max_digits=19)),
                ("average_price", models.DecimalField(decimal_places=9, max_digits=19)),
                ("current_price", models.DecimalField(decimal_places=9, max_digits=19)),
                ("var_margin", models.DecimalField(decimal_places=9, max_digits=19)),
                (
                    "expected_yield",
                    models.DecimalField(decimal_places=9, max_digits=19),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="invest.instrument",
                    ),
                ),
                (
                    "portfolio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="invest.portfoliorecord",
                    ),
                ),
            ],
            options={
                "db_table": "portfolio_positions",
            },
        ),
        migrations.CreateModel(
            name="PortfolioCost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "currency",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="invest.currency",
                    ),
                ),
                (
                    "portfolio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="invest.portfoliorecord",
                    ),
                ),
            ],
            options={
                "db_table": "portfolio_cost",
            },
        ),
        migrations.CreateModel(
            name="InstrumentIndex",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True)),
                ("volatility", models.FloatField()),
                ("volume", models.FloatField()),
                ("spread", models.FloatField()),
                ("price", models.FloatField()),
                ("gain", models.FloatField()),
                ("relative_price", models.FloatField()),
                (
                    "instrument",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="invest.instrument",
                    ),
                ),
            ],
            options={
                "db_table": "instrument_index",
            },
        ),
        migrations.CreateModel(
            name="Candle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ts", models.DateTimeField()),
                ("open", models.FloatField()),
                ("close", models.FloatField()),
                ("high", models.FloatField()),
                ("low", models.FloatField()),
                ("volume", models.IntegerField()),
                ("interval", models.CharField(max_length=10)),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="invest.instrument",
                    ),
                ),
            ],
            options={
                "db_table": "candles",
            },
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "instrument_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="invest.instrument",
                    ),
                ),
                ("direction", models.CharField(blank=True, max_length=4)),
                ("payment_type", models.CharField(blank=True, max_length=100)),
                ("style", models.CharField(blank=True, max_length=100)),
                ("settlemet_type", models.CharField(blank=True, max_length=100)),
                ("asset_type", models.CharField(max_length=100)),
                (
                    "basic_asset_size",
                    models.DecimalField(decimal_places=9, max_digits=19),
                ),
                ("strike_price", models.DecimalField(decimal_places=9, max_digits=19)),
                (
                    "basic_asset",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="invest.instrument",
                    ),
                ),
                (
                    "settlemet_currency",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="invest.currency",
                    ),
                ),
            ],
            options={
                "db_table": "options",
            },
            bases=("invest.instrument",),
        ),
        migrations.CreateModel(
            name="Future",
            fields=[
                (
                    "instrument_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="invest.instrument",
                    ),
                ),
                ("first_trade_date", models.DateTimeField()),
                ("last_trade_date", models.DateTimeField()),
                ("futures_type", models.CharField(max_length=100)),
                ("asset_type", models.CharField(max_length=100)),
                (
                    "basic_asset_size",
                    models.DecimalField(decimal_places=9, max_digits=19),
                ),
                ("expiration_date", models.DateTimeField()),
                (
                    "basic_asset",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="invest.instrument",
                    ),
                ),
            ],
            options={
                "db_table": "futures",
            },
            bases=("invest.instrument",),
        ),
    ]
